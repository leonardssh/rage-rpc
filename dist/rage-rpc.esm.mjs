var e;!function(e){e.Blip="b",e.Checkpoint="cp",e.Colshape="c",e.Label="l",e.Marker="m",e.Object="o",e.Pickup="p",e.Player="pl",e.Vehicle="v"}(e||(e={}));let r=!1;function setDebugMode(e){r=e}function getEnvironment(){if(mp.joaat)return"server";if(mp.game&&mp.game.joaat)return"client";if(mp.trigger)return"cef";throw new Error("Unknown RAGE environment")}function log(e,t="info"){if(!r)return;const n=getEnvironment(),o=mp.console;(o?mp.console:console)[o?{info:"logInfo",error:"logError",warn:"logWarn"}[t]:"info"===t?"log":t](`RPC (${n}): ${e}`)}function isObjectMpType(r,t){const n="client"===getEnvironment();if(r&&"object"==typeof r&&void 0!==r.id){const validate=(e,t,o)=>n?r.type===e&&t.at(r.id)===r:r instanceof o;switch(t){case e.Blip:return validate("blip",mp.blips,mp.Blip);case e.Checkpoint:return validate("checkpoint",mp.checkpoints,mp.Checkpoint);case e.Colshape:return validate("colshape",mp.colshapes,mp.Colshape);case e.Label:return validate("textlabel",mp.labels,mp.TextLabel);case e.Marker:return validate("marker",mp.markers,mp.Marker);case e.Object:return validate("object",mp.objects,mp.Object);case e.Pickup:return validate("pickup",mp.pickups,mp.Pickup);case e.Player:return validate("player",mp.players,mp.Player);case e.Vehicle:return validate("vehicle",mp.vehicles,mp.Vehicle)}}return!1}function generateId(){const e=46656*Math.random()|0,r=46656*Math.random()|0;return`000${e.toString(36)}`.slice(-3)+`000${r.toString(36)}`.slice(-3)}function stringifyData(r){const t=getEnvironment();return JSON.stringify(r,((r,n)=>{if("client"===t||"server"===t&&n&&"object"==typeof n){let r;if(isObjectMpType(n,e.Blip)?r=e.Blip:isObjectMpType(n,e.Checkpoint)?r=e.Checkpoint:isObjectMpType(n,e.Colshape)?r=e.Colshape:isObjectMpType(n,e.Marker)?r=e.Marker:isObjectMpType(n,e.Object)?r=e.Object:isObjectMpType(n,e.Pickup)?r=e.Pickup:isObjectMpType(n,e.Player)?r=e.Player:isObjectMpType(n,e.Vehicle)&&(r=e.Vehicle),r)return{__t:r,i:"number"==typeof n.remoteId?n.remoteId:n.id}}return n}))}function promiseTimeout(e,r){return"number"==typeof r?Promise.race([new Promise(((e,t)=>{setTimeout((()=>t("TIMEOUT")),r)})),e]):e}function isBrowserValid(e){try{e.url}catch(e){return!1}return!0}const t=getEnvironment(),n="cef"===t?window:global;if(n["__rpc:processPartial"]||(n.__rpcPartialData={},n["__rpc:processPartial"]=(e,r,o,s,c)=>{"server"!==t&&(c=s,s=o,o=r,r=e),n.__rpcPartialData[r]||(n.__rpcPartialData[r]=new Array(s)),n.__rpcPartialData[r][o]=c,n.__rpcPartialData[r].includes(void 0)||("server"===t?n["__rpc:process"](e,n.__rpcPartialData[r].join("")):n["__rpc:process"](n.__rpcPartialData[r].join("")),delete n.__rpcPartialData[r])}),!n["__rpc:process"]){if(n.__rpcListeners={},n.__rpcPending={},n.__rpcEvListeners={},n["__rpc:process"]=(r,o)=>{"server"!==t&&(o=r);const s=function parseData(r){const t=getEnvironment();return JSON.parse(r,((r,n)=>{if(("client"===t||"server"===t)&&n&&"object"==typeof n&&"string"==typeof n.__t&&"number"==typeof n.i&&2===Object.keys(n).length){const r=n.i;let o;switch(n.__t){case e.Blip:o=mp.blips;break;case e.Checkpoint:o=mp.checkpoints;break;case e.Colshape:o=mp.colshapes;break;case e.Label:o=mp.labels;break;case e.Marker:o=mp.markers;break;case e.Object:o=mp.objects;break;case e.Pickup:o=mp.pickups;break;case e.Player:o=mp.players;break;case e.Vehicle:o=mp.vehicles}if(o)return o["client"===t?"atRemoteId":"at"](r)}return n}))}(o);if(s.req){const e={id:s.id,environment:s.fenv||s.env};"server"===t&&(e.player=r);const o={ret:1,id:s.id,env:t};let c;switch(t){case"server":c=r=>e.player.call("__rpc:process",[stringifyData(r)]);break;case"client":if("server"===s.env)c=e=>mp.events.callRemote("__rpc:process",stringifyData(e));else if("cef"===s.env){const r=s.b&&n.__rpcBrowsers[s.b];e.browser=r,c=e=>r&&isBrowserValid(r)&&passEventToBrowser(r,e,!0)}break;default:c=e=>mp.trigger("__rpc:process",stringifyData(e))}if(c){const r=callProcedure(s.name,s.args,e);s.noRet||r.then((e=>c({...o,res:e}))).catch((e=>c({...o,err:e||null})))}}else if(s.ret){const e=n.__rpcPending[s.id];if("server"===t&&e.player!==r)return;e&&(e.resolve(s.hasOwnProperty("err")?Promise.reject(s.err):Promise.resolve(s.res)),delete n.__rpcPending[s.id])}},"cef"===t)void 0===n["__rpc:id"]&&(n["__rpc:id"]=new Promise((e=>{window.name?e(window.name):n["__rpc:id:resolve"]=e})));else if(mp.events.add("__rpc:process",n["__rpc:process"]),mp.events.add("__rpc:processPartial",n["__rpc:processPartial"]),"client"===t){register("__rpc:callServer",(([e,r,t],n)=>_callServer(e,r,{fenv:n.environment,noRet:t}))),register("__rpc:callBrowsers",(([e,r,t],n)=>_callBrowsers(null,e,r,{fenv:n.environment,noRet:t}))),n.__rpcBrowsers={};const initBrowser=e=>{const r=generateId();Object.keys(n.__rpcBrowsers).forEach((r=>{const t=n.__rpcBrowsers[r];t&&isBrowserValid(t)&&t!==e||delete n.__rpcBrowsers[r]})),n.__rpcBrowsers[r]=e,e.execute(`\n                    window.name = '${r}';\n                    if(typeof window['__rpc:id'] === 'undefined'){\n                        window['__rpc:id'] = Promise.resolve(window.name);\n                    }else{\n                        window['__rpc:id:resolve'](window.name);\n                    }\n                `)};mp.browsers.forEach(initBrowser),mp.events.add("browserCreated",initBrowser),n.__rpcBrowserProcedures={},mp.events.add("__rpc:browserRegister",(e=>{const[r,t]=JSON.parse(e);n.__rpcBrowserProcedures[t]=r})),mp.events.add("__rpc:browserUnregister",(e=>{const[r,t]=JSON.parse(e);n.__rpcBrowserProcedures[t]===r&&delete n.__rpcBrowserProcedures[t]})),register("__rpc:triggerEventBrowsers",(([e,r],t)=>{Object.keys(n.__rpcBrowsers).forEach((o=>{const s=n.__rpcBrowsers[o];s&&isBrowserValid(s)?_callBrowser(s,"__rpc:triggerEvent",[e,r],{fenv:t.environment,noRet:1}):delete n.__rpcBrowsers[o]}))}))}register("__rpc:triggerEvent",(([e,r],t)=>callEvent(e,r,t)))}function passEventToBrowser(e,r,t){const n=stringifyData(r);e.execute(`var process = window["__rpc:process"]; if(process){ process(${JSON.stringify(n)}); }else{ ${t?"":`mp.trigger("__rpc:process", '{"ret":1,"id":"${r.id}","err":"PROCEDURE_NOT_FOUND","env":"cef"}');`} }`)}function callProcedure(e,r,t){const o=n.__rpcListeners[e];return o?Promise.resolve(o(r,t)):Promise.reject(`PROCEDURE_NOT_FOUND (${e})`)}function sendEventData(e,r){const t={client:(e,...r)=>mp.events.callRemote(e,...r),server:(e,...t)=>r.call(e,[...t])},n=e.env,o=stringifyData(e);if(o.length>32e3){const r=function chunkSubstr(e,r){const t=Math.ceil(e.length/r),n=new Array(t);let o=0;for(let s=0;s<t;s+=1)n[s]=e.substring(o,r),o+=r;return n}(o,32e3);r.forEach(((o,s)=>{t[n]("__rpc:processPartial",e.id,s,r.length,o)}))}else t[n]("__rpc:process",o)}function register(e,r){if("string"!=typeof e||!r||"function"!=typeof r)throw new Error(`register expects 2 arguments: "name" and "cb" - ("${e}")`);return log(`Registered procedure "${e}"`),"cef"===t&&n["__rpc:id"].then((r=>mp.trigger("__rpc:browserRegister",JSON.stringify([r,e])))),n.__rpcListeners[e]=r,()=>unregister(e)}function unregister(e){if("string"!=typeof e)throw new Error(`unregister expects 1 argument: "name" - ("${e}")`);log(`Unregistered procedure "${e}"`),"cef"===t&&n["__rpc:id"].then((r=>mp.trigger("__rpc:browserUnregister",JSON.stringify([r,e])))),n.__rpcListeners[e]=void 0}function call(e,r,n={}){return"string"!=typeof e?Promise.reject(`call expects 1 to 3 arguments: "name", optional "args", and optional "options" - ("${e}")`):promiseTimeout(callProcedure(e,r,{environment:t}),n.timeout)}function _callServer(e,r,o={}){switch(t){case"server":return call(e,r);case"client":{const s=generateId();return new Promise((c=>{o.noRet||(n.__rpcPending[s]={resolve:c});sendEventData({req:1,id:s,name:e,env:t,args:r,...o})}))}case"cef":return callClient("__rpc:callServer",[e,r,Number(o.noRet)])}}function callServer(e,r,t={}){if("string"!=typeof e)return Promise.reject(`callServer expects 1 to 3 arguments: "name", optional "args", and optional "options" - ("${e}")`);const n={};return t.noRet&&(n.noRet=1),promiseTimeout(_callServer(e,r,n),t.timeout)}function _callClient(e,r,o,s={}){switch(t){case"client":return call(r,o);case"server":{const c=generateId();return new Promise((i=>{s.noRet||(n.__rpcPending[c]={resolve:i,player:e});sendEventData({req:1,id:c,name:r,env:t,args:o,...s},e)}))}case"cef":{const e=generateId();return n["__rpc:id"].then((c=>new Promise((i=>{s.noRet||(n.__rpcPending[e]={resolve:i});const a={b:c,req:1,id:e,name:r,env:t,args:o,...s};mp.trigger("__rpc:process",stringifyData(a))}))))}}}function callClient(e,r,n,o={}){switch(t){case"client":if(o=n||{},n=r,r=e,e=null,"string"!=typeof r)return Promise.reject(`callClient from the client expects 1 to 3 arguments: "name", optional "args", and optional "options" - ("${r}")`);break;case"server":if("string"!=typeof r||"object"!=typeof e)return Promise.reject(`callClient from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" - ("${r}")`);break;case"cef":if(o=n||{},n=r,r=e,e=null,"string"!=typeof r)return Promise.reject(`callClient from the browser expects 1 to 3 arguments: "name", optional "args", and optional "options" - ("${r}")`)}const s={};return o.noRet&&(s.noRet=1),promiseTimeout(_callClient(e,r,n,s),o.timeout)}function _callBrowser(e,r,o,s={}){return new Promise((c=>{const i=generateId();s.noRet||(n.__rpcPending[i]={resolve:c}),passEventToBrowser(e,{req:1,id:i,name:r,env:t,args:o,...s},!1)}))}function _callBrowsers(e,r,o,s={}){switch(t){case"client":{const e=n.__rpcBrowserProcedures[r];if(!e)return Promise.reject(`PROCEDURE_NOT_FOUND (${r})`);const t=n.__rpcBrowsers[e];return t&&isBrowserValid(t)?_callBrowser(t,r,o,s):Promise.reject(`PROCEDURE_NOT_FOUND (${r})`)}case"server":return _callClient(e,"__rpc:callBrowsers",[r,o,Number(s.noRet)],s);case"cef":return _callClient(null,"__rpc:callBrowsers",[r,o,Number(s.noRet)],s)}}function callBrowsers(e,r,n,o={}){let s;const c={};switch(t){case"client":case"cef":if(o=n||{},n=r,"string"!=typeof(r=e))return Promise.reject(`callBrowsers from the client or browser expects 1 to 3 arguments: "name", optional "args", and optional "options" - ("${r}")`);o.noRet&&(c.noRet=1),s=_callBrowsers(null,r,n,c);break;case"server":if("string"!=typeof r||"object"!=typeof e)return Promise.reject(`callBrowsers from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" - ("${r}")`);o.noRet&&(c.noRet=1),s=_callBrowsers(e,r,n,c)}if(s)return promiseTimeout(s,o.timeout)}function callBrowser(e,r,n,o={}){if("client"!==t)return Promise.reject(`callBrowser can only be used in the client environment - ("${r}")`);if(!isBrowserValid(e)||"string"!=typeof r)return Promise.reject(`callBrowser expects 2 to 4 arguments: "browser", "name", optional "args", and optional "options" - ("${r}")`);const s={};return o.noRet&&(s.noRet=1),promiseTimeout(_callBrowser(e,r,n,s),o.timeout)}function callEvent(e,r,t){const o=n.__rpcEvListeners[e];o&&o.forEach((e=>e(r,t)))}function on(e,r){if("string"!=typeof e||!r||"function"!=typeof r)throw new Error(`on expects 2 arguments: "name" and "cb" - ("${e}")`);log(`Registered procedure listener "${e}"`);const t=n.__rpcEvListeners[e]||new Set;return t.add(r),n.__rpcEvListeners[e]=t,()=>off(e,r)}function off(e,r){if("string"!=typeof e||!r||"function"!=typeof r)throw new Error(`off expects 2 arguments: "name" and "cb" - ("${e}")`);const t=n.__rpcEvListeners[e];t&&(log(`Unregistered procedure listener "${e}"`),t.delete(r))}function trigger(e,r){if("string"!=typeof e)throw new Error(`trigger expects 1 or 2 arguments: "name", and optional "args" - ("${e}")`);callEvent(e,r,{environment:t})}function triggerClient(e,r,n){switch(t){case"client":if(n=r,r=e,e=null,"string"!=typeof r)throw new Error(`triggerClient from the client expects 1 or 2 arguments: "name", and optional "args" - ("${r}")`);break;case"server":if("string"!=typeof r||"object"!=typeof e)throw new Error(`triggerClient from the server expects 2 or 3 arguments: "player", "name", and optional "args" - ("${r}")`);break;case"cef":if(n=r,r=e,e=null,"string"!=typeof r)throw new Error(`triggerClient from the browser expects 1 or 2 arguments: "name", and optional "args" - ("${r}")`)}_callClient(e,"__rpc:triggerEvent",[r,n],{noRet:1})}function triggerServer(e,r){if("string"!=typeof e)throw new Error(`triggerServer expects 1 or 2 arguments: "name", and optional "args" - ("${e}")`);_callServer("__rpc:triggerEvent",[e,r],{noRet:1})}function triggerBrowsers(e,r,n){switch(t){case"client":case"cef":if(n=r,r=e,e=null,"string"!=typeof r)throw new Error(`triggerBrowsers from the client or browser expects 1 or 2 arguments: "name", and optional "args" - ("${r}")`);break;case"server":if("string"!=typeof r||"object"!=typeof e)throw new Error(`triggerBrowsers from the server expects 2 or 3 arguments: "player", "name", and optional "args" - ("${r}")`)}_callClient(e,"__rpc:triggerEventBrowsers",[r,n],{noRet:1})}function triggerBrowser(e,r,n){if("client"!==t)throw new Error(`callBrowser can only be used in the client environment - ("${r}")`);if(!isBrowserValid(e)||"string"!=typeof r)throw new Error(`callBrowser expects 2 or 3 arguments: "browser", "name", and optional "args" - ("${r}")`);_callBrowser(e,"__rpc:triggerEvent",[r,n],{noRet:1})}const o="0.2.4";export{call,callBrowser,callBrowsers,callClient,callServer,off,on,register,setDebugMode,trigger,triggerBrowser,triggerBrowsers,triggerClient,triggerServer,unregister,o as version};
