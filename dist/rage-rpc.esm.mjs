var e;!function(e){e.Blip="b",e.Checkpoint="cp",e.Colshape="c",e.Label="l",e.Marker="m",e.Object="o",e.Pickup="p",e.Player="pl",e.Vehicle="v"}(e||(e={}));let r=!1;function setDebugMode(e){r=e}function getEnvironment(){if(mp.joaat)return"server";if(mp.game&&mp.game.joaat)return"client";if(mp.trigger)return"cef";throw new Error("Unknown RAGE environment")}function log(e,t="info"){if(!r)return;const n=getEnvironment(),s=mp.console;(s?mp.console:console)[s?{info:"logInfo",error:"logError",warn:"logWarn"}[t]:"info"===t?"log":t](`RPC (${n}): ${e}`)}function isObjectMpType(r,t){const n="client"===getEnvironment();if(r&&"object"==typeof r&&void 0!==r.id){const validate=(e,t,s)=>n?r.type===e&&t.at(r.id)===r:r instanceof s;switch(t){case e.Blip:return validate("blip",mp.blips,mp.Blip);case e.Checkpoint:return validate("checkpoint",mp.checkpoints,mp.Checkpoint);case e.Colshape:return validate("colshape",mp.colshapes,mp.Colshape);case e.Label:return validate("textlabel",mp.labels,mp.TextLabel);case e.Marker:return validate("marker",mp.markers,mp.Marker);case e.Object:return validate("object",mp.objects,mp.Object);case e.Pickup:return validate("pickup",mp.pickups,mp.Pickup);case e.Player:return validate("player",mp.players,mp.Player);case e.Vehicle:return validate("vehicle",mp.vehicles,mp.Vehicle)}}return!1}function generateId(){const e=46656*Math.random()|0,r=46656*Math.random()|0;return`000${e.toString(36)}`.slice(-3)+`000${r.toString(36)}`.slice(-3)}function stringifyData(r){const t=getEnvironment();return JSON.stringify(r,((r,n)=>{if("client"===t||"server"===t&&n&&"object"==typeof n){let r;if(isObjectMpType(n,e.Blip)?r=e.Blip:isObjectMpType(n,e.Checkpoint)?r=e.Checkpoint:isObjectMpType(n,e.Colshape)?r=e.Colshape:isObjectMpType(n,e.Marker)?r=e.Marker:isObjectMpType(n,e.Object)?r=e.Object:isObjectMpType(n,e.Pickup)?r=e.Pickup:isObjectMpType(n,e.Player)?r=e.Player:isObjectMpType(n,e.Vehicle)&&(r=e.Vehicle),r)return{__t:r,i:"number"==typeof n.remoteId?n.remoteId:n.id}}return n}))}function promiseTimeout(e,r){return"number"==typeof r?Promise.race([new Promise(((e,t)=>{setTimeout((()=>t("TIMEOUT")),r)})),e]):e}function isBrowserValid(e){try{e.url}catch(e){return!1}return!0}const t="__rpc:triggerEvent",n=getEnvironment(),s="cef"===n?window:global;if(s["__rpc:processPartial"]||(s.__rpcPartialData={},s["__rpc:processPartial"]=(e,r,t,o,c)=>{"server"!==n&&(c=o,o=t,t=r,r=e),s.__rpcPartialData[r]||(s.__rpcPartialData[r]=new Array(o)),s.__rpcPartialData[r][t]=c,s.__rpcPartialData[r].includes(void 0)||("server"===n?s["__rpc:process"](e,s.__rpcPartialData[r].join("")):s["__rpc:process"](s.__rpcPartialData[r].join("")),delete s.__rpcPartialData[r])}),!s["__rpc:process"]){if(s.__rpcListeners={},s.__rpcPending={},s.__rpcEvListeners={},s["__rpc:process"]=(r,t)=>{"server"!==n&&(t=r);const o=function parseData(r){const t=getEnvironment();return JSON.parse(r,((r,n)=>{if(("client"===t||"server"===t)&&n&&"object"==typeof n&&"string"==typeof n.__t&&"number"==typeof n.i&&2===Object.keys(n).length){const r=n.i;let s;switch(n.__t){case e.Blip:s=mp.blips;break;case e.Checkpoint:s=mp.checkpoints;break;case e.Colshape:s=mp.colshapes;break;case e.Label:s=mp.labels;break;case e.Marker:s=mp.markers;break;case e.Object:s=mp.objects;break;case e.Pickup:s=mp.pickups;break;case e.Player:s=mp.players;break;case e.Vehicle:s=mp.vehicles}if(s)return s["client"===t?"atRemoteId":"at"](r)}return n}))}(t);if(o.req){const e={id:o.id,environment:o.fenv||o.env};"server"===n&&(e.player=r);const t={ret:1,id:o.id,env:n};let c;switch(n){case"server":c=r=>e.player.call("__rpc:process",[stringifyData(r)]);break;case"client":if("server"===o.env)c=e=>mp.events.callRemote("__rpc:process",stringifyData(e));else if("cef"===o.env){const r=o.b&&s.__rpcBrowsers[o.b];e.browser=r,c=e=>r&&isBrowserValid(r)&&passEventToBrowser(r,e,!0)}break;default:c=e=>mp.trigger("__rpc:process",stringifyData(e))}if(c){const r=callProcedure(o.name,o.args,e);o.noRet||r.then((e=>c({...t,res:e}))).catch((e=>c({...t,err:e||null})))}}else if(o.ret){const e=s.__rpcPending[o.id];if("server"===n&&e.player!==r)return;e&&(e.resolve(o.hasOwnProperty("err")?Promise.reject(o.err):Promise.resolve(o.res)),delete s.__rpcPending[o.id])}},"cef"===n)void 0===s["__rpc:id"]&&(s["__rpc:id"]=new Promise((e=>{window.name?e(window.name):s["__rpc:id:resolve"]=e})));else if(mp.events.add("__rpc:process",s["__rpc:process"]),mp.events.add("__rpc:processPartial",s["__rpc:processPartial"]),"client"===n){register("__rpc:callServer",(([e,r,t],n)=>_callServer(e,r,{fenv:n.environment,noRet:t}))),register("__rpc:callBrowsers",(([e,r,t],n)=>_callBrowsers(null,e,r,{fenv:n.environment,noRet:t}))),s.__rpcBrowsers={};const initBrowser=e=>{const r=generateId();Object.keys(s.__rpcBrowsers).forEach((r=>{const t=s.__rpcBrowsers[r];t&&isBrowserValid(t)&&t!==e||delete s.__rpcBrowsers[r]})),s.__rpcBrowsers[r]=e,e.execute(`\n                    window.name = '${r}';\n                    if(typeof window['__rpc:id'] === 'undefined'){\n                        window['__rpc:id'] = Promise.resolve(window.name);\n                    }else{\n                        window['__rpc:id:resolve'](window.name);\n                    }\n                `)};mp.browsers.forEach(initBrowser),mp.events.add("browserCreated",initBrowser),s.__rpcBrowserProcedures={},mp.events.add("__rpc:browserRegister",(e=>{const[r,t]=JSON.parse(e);s.__rpcBrowserProcedures[t]=r})),mp.events.add("__rpc:browserUnregister",(e=>{const[r,t]=JSON.parse(e);s.__rpcBrowserProcedures[t]===r&&delete s.__rpcBrowserProcedures[t]})),register("__rpc:triggerEventBrowsers",(([e,r],n)=>{Object.keys(s.__rpcBrowsers).forEach((o=>{const c=s.__rpcBrowsers[o];c&&isBrowserValid(c)?_callBrowser(c,t,[e,r],{fenv:n.environment,noRet:1}):delete s.__rpcBrowsers[o]}))}))}register(t,(([e,r],t)=>callEvent(e,r,t)))}function passEventToBrowser(e,r,t){const n=stringifyData(r);e.execute(`var process = window["__rpc:process"]; if(process){ process(${JSON.stringify(n)}); }else{ ${t?"":`mp.trigger("__rpc:process", '{"ret":1,"id":"${r.id}","err":"PROCEDURE_NOT_FOUND","env":"cef"}');`} }`)}function callProcedure(e,r,t){const n=s.__rpcListeners[e];return n?Promise.resolve(n(r,t)):Promise.reject(`PROCEDURE_NOT_FOUND (${e})`)}function sendEventData(e,r){const t={client:(e,...r)=>mp.events.callRemote(e,...r),server:(e,...t)=>r.call(e,[...t])},n=e.env,s=stringifyData(e);if(s.length>32e3){const r=function chunkSubstr(e,r){const t=Math.ceil(e.length/r),n=new Array(t);let s=0;for(let o=0;o<t;o+=1)n[o]=e.substring(s,r),s+=r;return n}(s,32e3);r.forEach(((s,o)=>{t[n]("__rpc:processPartial",e.id,o,r.length,s)}))}else t[n]("__rpc:process",s)}function register(e,r){if(2!==arguments.length)throw new Error(`register expects 2 arguments: "name" and "cb" ("${e}")`);return log(`Registered procedure "${e}"`),"cef"===n&&s["__rpc:id"].then((r=>mp.trigger("__rpc:browserRegister",JSON.stringify([r,e])))),s.__rpcListeners[e]=r,()=>unregister(e)}function unregister(e){if(1!==arguments.length)throw new Error(`unregister expects 1 argument: "name" ("${e}")`);log(`Unregistered procedure "${e}"`),"cef"===n&&s["__rpc:id"].then((r=>mp.trigger("__rpc:browserUnregister",JSON.stringify([r,e])))),s.__rpcListeners[e]=void 0}function call(e,r,t={}){return arguments.length<1||arguments.length>3?Promise.reject(`call expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${e}")`):promiseTimeout(callProcedure(e,r,{environment:n}),t.timeout)}function _callServer(e,r,t={}){switch(n){case"server":return call(e,r);case"client":{const o=generateId();return new Promise((c=>{t.noRet||(s.__rpcPending[o]={resolve:c});sendEventData({req:1,id:o,name:e,env:n,args:r,...t})}))}case"cef":return callClient("__rpc:callServer",[e,r,Number(t.noRet)])}}function callServer(e,r,t={}){if(arguments.length<1||arguments.length>3)return Promise.reject(`callServer expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${e}")`);const n={};return t.noRet&&(n.noRet=1),promiseTimeout(_callServer(e,r,n),t.timeout)}function _callClient(e,r,t,o={}){switch(n){case"client":return call(r,t);case"server":{const c=generateId();return new Promise((i=>{o.noRet||(s.__rpcPending[c]={resolve:i,player:e});sendEventData({req:1,id:c,name:r,env:n,args:t,...o},e)}))}case"cef":{const e=generateId();return s["__rpc:id"].then((c=>new Promise((i=>{o.noRet||(s.__rpcPending[e]={resolve:i});const a={b:c,req:1,id:e,name:r,env:n,args:t,...o};mp.trigger("__rpc:process",stringifyData(a))}))))}}}function callClient(e,r,t,s={}){switch(n){case"client":if(s=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject(`callClient from the client expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>4||"object"!=typeof e)return Promise.reject(`callClient from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" ("${r}")`);break;case"cef":if(s=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject(`callClient from the browser expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`)}const o={};return s.noRet&&(o.noRet=1),promiseTimeout(_callClient(e,r,t,o),s.timeout)}function _callBrowser(e,r,t,o={}){return new Promise((c=>{const i=generateId();o.noRet||(s.__rpcPending[i]={resolve:c}),passEventToBrowser(e,{req:1,id:i,name:r,env:n,args:t,...o},!1)}))}function _callBrowsers(e,r,t,o={}){switch(n){case"client":{const e=s.__rpcBrowserProcedures[r];if(!e)return Promise.reject(`PROCEDURE_NOT_FOUND (${r})`);const n=s.__rpcBrowsers[e];return n&&isBrowserValid(n)?_callBrowser(n,r,t,o):Promise.reject(`PROCEDURE_NOT_FOUND (${r})`)}case"server":return _callClient(e,"__rpc:callBrowsers",[r,t,Number(o.noRet)],o);case"cef":return _callClient(null,"__rpc:callBrowsers",[r,t,Number(o.noRet)],o)}}function callBrowsers(e,r,t,s={}){let o;const c={};switch(n){case"client":case"cef":if(s=t||{},t=r,r=e,arguments.length<1||arguments.length>3)return Promise.reject(`callBrowsers from the client or browser expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`);s.noRet&&(c.noRet=1),o=_callBrowsers(null,r,t,c);break;case"server":if(arguments.length<2||arguments.length>4)return Promise.reject(`callBrowsers from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" ("${r}")`);s.noRet&&(c.noRet=1),o=_callBrowsers(e,r,t,c)}if(o)return promiseTimeout(o,s.timeout)}function callBrowser(e,r,t,s={}){if("client"!==n)return Promise.reject(`callBrowser can only be used in the client environment ("${r}")`);if(arguments.length<2||arguments.length>4)return Promise.reject(`callBrowser expects 2 to 4 arguments: "browser", "name", optional "args", and optional "options" ("${r}")`);const o={};return s.noRet&&(o.noRet=1),promiseTimeout(_callBrowser(e,r,t,o),s.timeout)}function callEvent(e,r,t){const n=s.__rpcEvListeners[e];n&&n.forEach((e=>e(r,t)))}function on(e,r){if(2!==arguments.length)throw new Error(`on expects 2 arguments: "name" and "cb" ("${e}")`);log(`Registered procedure listener "${e}"`);const t=s.__rpcEvListeners[e]||new Set;return t.add(r),s.__rpcEvListeners[e]=t,()=>off(e,r)}function off(e,r){if(2!==arguments.length)throw new Error(`off expects 2 arguments: "name" and "cb" ("${e}")`);const t=s.__rpcEvListeners[e];t&&(log(`Unregistered procedure listener "${e}"`),t.delete(r))}function trigger(e,r){if(arguments.length<1||arguments.length>2)throw new Error(`trigger expects 1 or 2 arguments: "name", and optional "args" ("${e}")`);callEvent(e,r,{environment:n})}function triggerClient(e,r,s){switch(n){case"client":if(s=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw new Error(`triggerClient from the client expects 1 or 2 arguments: "name", and optional "args" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>3||"object"!=typeof e)throw new Error(`triggerClient from the server expects 2 or 3 arguments: "player", "name", and optional "args" ("${r}")`);break;case"cef":if(s=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw new Error(`triggerClient from the browser expects 1 or 2 arguments: "name", and optional "args" ("${r}")`)}_callClient(e,t,[r,s],{noRet:1})}function triggerServer(e,r){if(arguments.length<1||arguments.length>2)throw new Error(`triggerServer expects 1 or 2 arguments: "name", and optional "args" ("${e}")`);_callServer(t,[e,r],{noRet:1})}function triggerBrowsers(e,r,t){switch(n){case"client":case"cef":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2)throw new Error(`triggerBrowsers from the client or browser expects 1 or 2 arguments: "name", and optional "args" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>3)throw new Error(`triggerBrowsers from the server expects 2 or 3 arguments: "player", "name", and optional "args" ("${r}")`)}_callClient(e,"__rpc:triggerEventBrowsers",[r,t],{noRet:1})}function triggerBrowser(e,r,s){if("client"!==n)throw new Error(`callBrowser can only be used in the client environment ("${r}")`);if(arguments.length<2||arguments.length>4)throw new Error(`callBrowser expects 2 or 3 arguments: "browser", "name", and optional "args" ("${r}")`);_callBrowser(e,t,[r,s],{noRet:1})}const o="0.2.1";export{call,callBrowser,callBrowsers,callClient,callServer,off,on,register,setDebugMode,trigger,triggerBrowser,triggerBrowsers,triggerClient,triggerServer,unregister,o as version};
