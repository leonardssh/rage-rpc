!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).rpc={})}(this,(function(e){"use strict";var r;!function(e){e.Blip="b",e.Checkpoint="cp",e.Colshape="c",e.Label="l",e.Marker="m",e.Object="o",e.Pickup="p",e.Player="pl",e.Vehicle="v"}(r||(r={}));let t=!1;function getEnvironment(){if(mp.joaat)return"server";if(mp.game&&mp.game.joaat)return"client";if(mp.trigger)return"cef";throw new Error("Unknown RAGE environment")}function log(e,r="info"){if(!t)return;const n=getEnvironment(),o=mp.console;(o?mp.console:console)[o?{info:"logInfo",error:"logError",warn:"logWarn"}[r]:"info"===r?"log":r](`RPC (${n}): ${e}`)}function isObjectMpType(e,t){const n="client"===getEnvironment();if(e&&"object"==typeof e&&void 0!==e.id){const validate=(r,t,o)=>n?e.type===r&&t.at(e.id)===e:e instanceof o;switch(t){case r.Blip:return validate("blip",mp.blips,mp.Blip);case r.Checkpoint:return validate("checkpoint",mp.checkpoints,mp.Checkpoint);case r.Colshape:return validate("colshape",mp.colshapes,mp.Colshape);case r.Label:return validate("textlabel",mp.labels,mp.TextLabel);case r.Marker:return validate("marker",mp.markers,mp.Marker);case r.Object:return validate("object",mp.objects,mp.Object);case r.Pickup:return validate("pickup",mp.pickups,mp.Pickup);case r.Player:return validate("player",mp.players,mp.Player);case r.Vehicle:return validate("vehicle",mp.vehicles,mp.Vehicle)}}return!1}function generateId(){const e=46656*Math.random()|0,r=46656*Math.random()|0;return`000${e.toString(36)}`.slice(-3)+`000${r.toString(36)}`.slice(-3)}function stringifyData(e){const t=getEnvironment();return JSON.stringify(e,((e,n)=>{if("client"===t||"server"===t&&n&&"object"==typeof n){let e;if(isObjectMpType(n,r.Blip)?e=r.Blip:isObjectMpType(n,r.Checkpoint)?e=r.Checkpoint:isObjectMpType(n,r.Colshape)?e=r.Colshape:isObjectMpType(n,r.Marker)?e=r.Marker:isObjectMpType(n,r.Object)?e=r.Object:isObjectMpType(n,r.Pickup)?e=r.Pickup:isObjectMpType(n,r.Player)?e=r.Player:isObjectMpType(n,r.Vehicle)&&(e=r.Vehicle),e)return{__t:e,i:"number"==typeof n.remoteId?n.remoteId:n.id}}return n}))}function promiseTimeout(e,r){return"number"==typeof r?Promise.race([new Promise(((e,t)=>{setTimeout((()=>t("TIMEOUT")),r)})),e]):e}function isBrowserValid(e){try{e.url}catch(e){return!1}return!0}const n="PROCEDURE_NOT_FOUND",o="__rpc:id",s="__rpc:process",i="__rpc:processPartial",c="__rpc:browserRegister",a="__rpc:browserUnregister",l="__rpc:triggerEvent",p="__rpc:triggerEventBrowsers",g=getEnvironment(),m="cef"===g?window:global;if(m[i]||(m.__rpcPartialData={},m[i]=(e,r,t,n,o)=>{"server"!==g&&(o=n,n=t,t=r,r=e),m.__rpcPartialData[r]||(m.__rpcPartialData[r]=new Array(n)),m.__rpcPartialData[r][t]=o,m.__rpcPartialData[r].includes(void 0)||("server"===g?m[s](e,m.__rpcPartialData[r].join("")):m[s](m.__rpcPartialData[r].join("")),delete m.__rpcPartialData[r])}),!m[s]){if(m.__rpcListeners={},m.__rpcPending={},m.__rpcEvListeners={},m[s]=(e,t)=>{"server"!==g&&(t=e);const n=function parseData(e){const t=getEnvironment();return JSON.parse(e,((e,n)=>{if(("client"===t||"server"===t)&&n&&"object"==typeof n&&"string"==typeof n.__t&&"number"==typeof n.i&&2===Object.keys(n).length){const e=n.i;let o;switch(n.__t){case r.Blip:o=mp.blips;break;case r.Checkpoint:o=mp.checkpoints;break;case r.Colshape:o=mp.colshapes;break;case r.Label:o=mp.labels;break;case r.Marker:o=mp.markers;break;case r.Object:o=mp.objects;break;case r.Pickup:o=mp.pickups;break;case r.Player:o=mp.players;break;case r.Vehicle:o=mp.vehicles}if(o)return o["client"===t?"atRemoteId":"at"](e)}return n}))}(t);if(n.req){const r={id:n.id,environment:n.fenv||n.env};"server"===g&&(r.player=e);const t={ret:1,id:n.id,env:g};let o;switch(g){case"server":o=e=>r.player.call(s,[stringifyData(e)]);break;case"client":if("server"===n.env)o=e=>mp.events.callRemote(s,stringifyData(e));else if("cef"===n.env){const e=n.b&&m.__rpcBrowsers[n.b];r.browser=e,o=r=>e&&isBrowserValid(e)&&passEventToBrowser(e,r,!0)}break;default:o=e=>mp.trigger(s,stringifyData(e))}if(o){const e=callProcedure(n.name,n.args,r);n.noRet||e.then((e=>o({...t,res:e}))).catch((e=>o({...t,err:e||null})))}}else if(n.ret){const r=m.__rpcPending[n.id];if("server"===g&&r.player!==e)return;r&&(r.resolve(n.hasOwnProperty("err")?Promise.reject(n.err):Promise.resolve(n.res)),delete m.__rpcPending[n.id])}},"cef"===g)void 0===m[o]&&(m[o]=new Promise((e=>{window.name?e(window.name):m["__rpc:id:resolve"]=e})));else if(mp.events.add(s,m[s]),mp.events.add(i,m[i]),"client"===g){register("__rpc:callServer",(([e,r,t],n)=>_callServer(e,r,{fenv:n.environment,noRet:t}))),register("__rpc:callBrowsers",(([e,r,t],n)=>_callBrowsers(null,e,r,{fenv:n.environment,noRet:t}))),m.__rpcBrowsers={};const initBrowser=e=>{const r=generateId();Object.keys(m.__rpcBrowsers).forEach((r=>{const t=m.__rpcBrowsers[r];t&&isBrowserValid(t)&&t!==e||delete m.__rpcBrowsers[r]})),m.__rpcBrowsers[r]=e,e.execute(`\n                    window.name = '${r}';\n                    if(typeof window['__rpc:id'] === 'undefined'){\n                        window['__rpc:id'] = Promise.resolve(window.name);\n                    }else{\n                        window['__rpc:id:resolve'](window.name);\n                    }\n                `)};mp.browsers.forEach(initBrowser),mp.events.add("browserCreated",initBrowser),m.__rpcBrowserProcedures={},mp.events.add(c,(e=>{const[r,t]=JSON.parse(e);m.__rpcBrowserProcedures[t]=r})),mp.events.add(a,(e=>{const[r,t]=JSON.parse(e);m.__rpcBrowserProcedures[t]===r&&delete m.__rpcBrowserProcedures[t]})),register(p,(([e,r],t)=>{Object.keys(m.__rpcBrowsers).forEach((n=>{const o=m.__rpcBrowsers[n];o&&isBrowserValid(o)?_callBrowser(o,l,[e,r],{fenv:t.environment,noRet:1}):delete m.__rpcBrowsers[n]}))}))}register(l,(([e,r],t)=>callEvent(e,r,t)))}function passEventToBrowser(e,r,t){const o=stringifyData(r);e.execute(`var process = window["__rpc:process"]; if(process){ process(${JSON.stringify(o)}); }else{ ${t?"":`mp.trigger("__rpc:process", '{"ret":1,"id":"${r.id}","err":"${n}","env":"cef"}');`} }`)}function callProcedure(e,r,t){const o=m.__rpcListeners[e];return o?Promise.resolve(o(r,t)):Promise.reject(`${n} (${e})`)}function sendEventData(e,r){const t={client:(e,...r)=>mp.events.callRemote(e,...r),server:(e,...t)=>r.call(e,[...t])},n=e.env,o=stringifyData(e);if(o.length>32e3){const r=function chunkSubstr(e,r){const t=Math.ceil(e.length/r),n=new Array(t);let o=0;for(let s=0;s<t;s+=1)n[s]=e.substring(o,r),o+=r;return n}(o,32e3);r.forEach(((o,s)=>{t[n](i,e.id,s,r.length,o)}))}else t[n](s,o)}function register(e,r){if(2!==arguments.length)throw new Error(`register expects 2 arguments: "name" and "cb" ("${e}")`);return log(`Registered procedure "${e}"`),"cef"===g&&m[o].then((r=>mp.trigger(c,JSON.stringify([r,e])))),m.__rpcListeners[e]=r,()=>unregister(e)}function unregister(e){if(1!==arguments.length)throw new Error(`unregister expects 1 argument: "name" ("${e}")`);log(`Unregistered procedure "${e}"`),"cef"===g&&m[o].then((r=>mp.trigger(a,JSON.stringify([r,e])))),m.__rpcListeners[e]=void 0}function call(e,r,t={}){return arguments.length<1||arguments.length>3?Promise.reject(`call expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${e}")`):promiseTimeout(callProcedure(e,r,{environment:g}),t.timeout)}function _callServer(e,r,t={}){switch(g){case"server":return call(e,r);case"client":{const n=generateId();return new Promise((o=>{t.noRet||(m.__rpcPending[n]={resolve:o});sendEventData({req:1,id:n,name:e,env:g,args:r,...t})}))}case"cef":return callClient("__rpc:callServer",[e,r,Number(t.noRet)])}}function _callClient(e,r,t,n={}){switch(g){case"client":return call(r,t);case"server":{const o=generateId();return new Promise((s=>{n.noRet||(m.__rpcPending[o]={resolve:s,player:e});sendEventData({req:1,id:o,name:r,env:g,args:t,...n},e)}))}case"cef":{const e=generateId();return m[o].then((o=>new Promise((i=>{n.noRet||(m.__rpcPending[e]={resolve:i});const c={b:o,req:1,id:e,name:r,env:g,args:t,...n};mp.trigger(s,stringifyData(c))}))))}}}function callClient(e,r,t,n={}){switch(g){case"client":if(n=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject(`callClient from the client expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>4||"object"!=typeof e)return Promise.reject(`callClient from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" ("${r}")`);break;case"cef":if(n=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject(`callClient from the browser expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`)}const o={};return n.noRet&&(o.noRet=1),promiseTimeout(_callClient(e,r,t,o),n.timeout)}function _callBrowser(e,r,t,n={}){return new Promise((o=>{const s=generateId();n.noRet||(m.__rpcPending[s]={resolve:o}),passEventToBrowser(e,{req:1,id:s,name:r,env:g,args:t,...n},!1)}))}function _callBrowsers(e,r,t,o={}){switch(g){case"client":{const e=m.__rpcBrowserProcedures[r];if(!e)return Promise.reject(`${n} (${r})`);const s=m.__rpcBrowsers[e];return s&&isBrowserValid(s)?_callBrowser(s,r,t,o):Promise.reject(`${n} (${r})`)}case"server":return _callClient(e,"__rpc:callBrowsers",[r,t,Number(o.noRet)],o);case"cef":return _callClient(null,"__rpc:callBrowsers",[r,t,Number(o.noRet)],o)}}function callEvent(e,r,t){const n=m.__rpcEvListeners[e];n&&n.forEach((e=>e(r,t)))}function off(e,r){if(2!==arguments.length)throw new Error(`off expects 2 arguments: "name" and "cb" ("${e}")`);const t=m.__rpcEvListeners[e];t&&(log(`Unregistered procedure listener "${e}"`),t.delete(r))}e.call=call,e.callBrowser=function callBrowser(e,r,t,n={}){if("client"!==g)return Promise.reject(`callBrowser can only be used in the client environment ("${r}")`);if(arguments.length<2||arguments.length>4)return Promise.reject(`callBrowser expects 2 to 4 arguments: "browser", "name", optional "args", and optional "options" ("${r}")`);const o={};return n.noRet&&(o.noRet=1),promiseTimeout(_callBrowser(e,r,t,o),n.timeout)},e.callBrowsers=function callBrowsers(e,r,t,n={}){let o;const s={};switch(g){case"client":case"cef":if(n=t||{},t=r,r=e,arguments.length<1||arguments.length>3)return Promise.reject(`callBrowsers from the client or browser expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${r}")`);n.noRet&&(s.noRet=1),o=_callBrowsers(null,r,t,s);break;case"server":if(arguments.length<2||arguments.length>4)return Promise.reject(`callBrowsers from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options" ("${r}")`);n.noRet&&(s.noRet=1),o=_callBrowsers(e,r,t,s)}if(o)return promiseTimeout(o,n.timeout)},e.callClient=callClient,e.callServer=function callServer(e,r,t={}){if(arguments.length<1||arguments.length>3)return Promise.reject(`callServer expects 1 to 3 arguments: "name", optional "args", and optional "options" ("${e}")`);const n={};return t.noRet&&(n.noRet=1),promiseTimeout(_callServer(e,r,n),t.timeout)},e.off=off,e.on=function on(e,r){if(2!==arguments.length)throw new Error(`on expects 2 arguments: "name" and "cb" ("${e}")`);log(`Registered procedure listener "${e}"`);const t=m.__rpcEvListeners[e]||new Set;return t.add(r),m.__rpcEvListeners[e]=t,()=>off(e,r)},e.register=register,e.setDebugMode=function setDebugMode(e){t=e},e.trigger=function trigger(e,r){if(arguments.length<1||arguments.length>2)throw new Error(`trigger expects 1 or 2 arguments: "name", and optional "args" ("${e}")`);callEvent(e,r,{environment:g})},e.triggerBrowser=function triggerBrowser(e,r,t){if("client"!==g)throw new Error(`callBrowser can only be used in the client environment ("${r}")`);if(arguments.length<2||arguments.length>4)throw new Error(`callBrowser expects 2 or 3 arguments: "browser", "name", and optional "args" ("${r}")`);_callBrowser(e,l,[r,t],{noRet:1})},e.triggerBrowsers=function triggerBrowsers(e,r,t){switch(g){case"client":case"cef":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2)throw new Error(`triggerBrowsers from the client or browser expects 1 or 2 arguments: "name", and optional "args" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>3)throw new Error(`triggerBrowsers from the server expects 2 or 3 arguments: "player", "name", and optional "args" ("${r}")`)}_callClient(e,p,[r,t],{noRet:1})},e.triggerClient=function triggerClient(e,r,t){switch(g){case"client":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw new Error(`triggerClient from the client expects 1 or 2 arguments: "name", and optional "args" ("${r}")`);break;case"server":if(arguments.length<2||arguments.length>3||"object"!=typeof e)throw new Error(`triggerClient from the server expects 2 or 3 arguments: "player", "name", and optional "args" ("${r}")`);break;case"cef":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw new Error(`triggerClient from the browser expects 1 or 2 arguments: "name", and optional "args" ("${r}")`)}_callClient(e,l,[r,t],{noRet:1})},e.triggerServer=function triggerServer(e,r){if(arguments.length<1||arguments.length>2)throw new Error(`triggerServer expects 1 or 2 arguments: "name", and optional "args" ("${e}")`);_callServer(l,[e,r],{noRet:1})},e.unregister=unregister,e.version="0.2.2",Object.defineProperty(e,"__esModule",{value:!0})}));
